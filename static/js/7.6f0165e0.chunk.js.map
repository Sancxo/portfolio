{"version":3,"sources":["Assets/Helpers/generativeGlitchAnimation/keyframes-generator.ts","Assets/Helpers/generativeGlitchAnimation/animation-code-generator.ts","Assets/Imgs/bckgrd_2.jpg","Pages/Home.tsx"],"names":["keyframesGenerator","prop","rand","keyframes","keyframesNone","Math","round","random","Error","i","keyframe","keyframeNone","rand2","includes","push","sort","a","b","glitchAnimation","sign","pathCode","opacityCode","length","pathGenerator","opacityGenerator","join","positionCode","positionGenerator","String","top","left","fontCode","fontGenerator","colorGenerator","blurGenerator","pathsAndOpacityDuration","animationDuration","PathsCode","OpacityCode","GlitchPositionBefore","GlitchPositionAfter","GlitchFontBefore","GlitchFontAfter","HomeContainer","styled","div","pageLoadAnimation","Jumbotron","Bckgrd","sizes","headerHeight","Container","MainTitle","h1","colours","white","fonts","pixel","mediaQueries","tablet","neonBlue","neonFuchsia","Pipe","Link","pixelHairline","black","mobileLandscape","Home","useEffect","window","scroll","className","to","title"],"mappings":"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","file":"static/js/7.6f0165e0.chunk.js","sourcesContent":["const keyframesGenerator = (prop: string): [number[], number[]] => {\r\n    let rand: number;\r\n    const keyframes: number[] = [], keyframesNone: number[] = [];\r\n\r\n    // We randomly generate the amount of steps in the keyframes:\r\n    switch (prop) {\r\n        case 'path/opac':\r\n            // random number between 7 and 15\r\n            rand = Math.round(Math.random() * 8) + 7;\r\n            break;\r\n    \r\n        case 'position':\r\n        case 'font':\r\n            // random number between 5 and 15\r\n            rand = Math.round(Math.random() * 10) + 5;\r\n            break;\r\n\r\n        default:\r\n            throw new Error(`CSS property \"${prop}\" is not handled by this glitch animation generator library. \r\n            \\nPlease look at keyframesGenerator function to find another one.`);\r\n    }\r\n\r\n    // We randomly generate the percentage for each step.\r\n    for (let i = 0; i < rand; i++) {\r\n        // keyframeNone will deactivate the effect between two keyframes.\r\n        let keyframe: number, keyframeNone: number;\r\n\r\n        do {\r\n            // number between 0 and 99;\r\n            keyframe = Math.round(Math.random() * 100);\r\n    \r\n            // We generate a number between 2 and 3 + the previous keyframe to be assigned to keyframeNone.\r\n            let rand2 = keyframe + (Math.round(Math.random()) + 2);\r\n            keyframeNone = rand2 <= 100 ? rand2 : 100;\r\n        } while (keyframes.includes(keyframe));\r\n        \r\n        keyframes.push(keyframe);\r\n        keyframesNone.push(keyframeNone);\r\n    }\r\n    // We sort the keyframes list to be in ascending order:\r\n    keyframes.sort((a, b) => { return a - b} );\r\n    keyframesNone.sort((a, b) => { return a - b} );\r\n    \r\n    return [keyframes, keyframesNone];\r\n}\r\n\r\nexport default keyframesGenerator;","// Thanks to Matt Gross for his glitch art animation walkthrough in pure CSS and his clip-path generator:\r\n// Cyberpunk-style Glitch walkthrough: https://codepen.io/mattgrosswork/pen/VwprebG\r\n// Randomly generated clip-path : https://codepen.io/mattgrosswork/pen/VwprebG\r\n\r\nimport keyframesGenerator from \"./keyframes-generator\";\r\nimport { blurGenerator, colorGenerator, fontGenerator, opacityGenerator, pathGenerator, positionGenerator } from \"./properties-generators\";\r\n\r\nexport const glitchAnimation = (prop: string, sign?: string): any => {\r\n    let [keyframes, keyframesNone]: [number[], number[]] = keyframesGenerator(prop);\r\n\r\n    switch (prop) {\r\n        case 'path/opac':\r\n            const pathCode: string[] = [], opacityCode: string[] = [];\r\n\r\n            for (let i = 0; i < keyframes.length; i++) {\r\n                pathCode.push(`${keyframes[i]}% { clip-path: polygon(${pathGenerator()}); }`);\r\n                opacityCode.push(`${keyframes[i]}% { opacity: ${opacityGenerator()}; }`);\r\n            }\r\n            for (let i = 0; i < keyframesNone.length; i++) {\r\n                pathCode.push(`${keyframesNone[i]}% { clip-path: none; }`);\r\n                opacityCode.push(`${keyframesNone[i]}% { opacity: 0 }`);\r\n            }\r\n\r\n            // We return a list of stringified lists\r\n            return [`${pathCode.join('\\n')}`, `${opacityCode.join('\\n')}`];\r\n        \r\n        case 'position':\r\n            const positionCode: string[] = [];\r\n\r\n            for (let i = 0; i < keyframes.length; i++) {\r\n                const [top, left]: string[] = positionGenerator(String(sign));\r\n                positionCode.push(`${keyframes[i]}% { top: ${top}}; left: ${left}} }`);\r\n            }\r\n            // We return a stringified list\r\n            return `${positionCode.join('\\n')}`;\r\n\r\n        case 'font':\r\n            const fontCode: string[] = [];\r\n\r\n            for (let i = 0; i < keyframes.length; i++) {\r\n                fontCode.push(`${keyframes[i]}% { \r\n                    font-family: ${fontGenerator()}; \r\n                    color: ${colorGenerator()}; \r\n                    filter: blur(${blurGenerator()}em); \r\n                }`);                \r\n            }\r\n            // We return a stringified list\r\n            return `${fontCode.join('\\n')}`;\r\n\r\n        default:\r\n            throw new Error(`CSS property \"${prop}\" is not handled by this glitch animation generator library. \r\n            \\nPlease look at glitchAnimation function to find another one.`);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/bckgrd_2.20534db9.jpg\";","import { ReactElement, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// generativeGlitchAnimation library imports\r\nimport { animationDuration, fontGenerator, positionGenerator } from '../Assets/Helpers/generativeGlitchAnimation/properties-generators';\r\nimport { glitchAnimation } from '../Assets/Helpers/generativeGlitchAnimation/animation-code-generator';\r\n\r\n// style\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { colours, fonts, mediaQueries, sizes } from '../Assets/Style/style';\r\nimport { pageLoadAnimation } from '../Assets/Style/styled-components';\r\nimport Bckgrd from '../Assets/Imgs/bckgrd_2.jpg';\r\n\r\n// Animations\r\nconst pathsAndOpacityDuration: string = animationDuration(5, 10);\r\nlet [PathsCode, OpacityCode ] = glitchAnimation('path/opac');\r\nPathsCode = keyframes`${PathsCode}`;\r\nOpacityCode = keyframes`${OpacityCode}`;\r\n// We call each functions twice to have different parameters so we get asynchronous animations.\r\nconst GlitchPositionBefore = keyframes`${glitchAnimation('position', 'negative')}`;\r\nconst GlitchPositionAfter = keyframes`${glitchAnimation('position', 'positive')}`;\r\nconst GlitchFontBefore = keyframes`${glitchAnimation('font')}`;\r\nconst GlitchFontAfter = keyframes`${glitchAnimation('font')}`;\r\n\r\n// Styled components\r\nconst HomeContainer = styled.div` ${pageLoadAnimation} `\r\nconst Jumbotron = styled.div`\r\n  background: linear-gradient(#16161675, #161616EE), 50% 50% / cover no-repeat url(${Bckgrd});\r\n  height: calc(100vh - ${sizes.headerHeight});\r\n  filter: blur(.25em);\r\n`\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst MainTitle = styled.h1`\r\n  margin-top: 50%;\r\n  color: ${colours.white};\r\n  opacity: 1;\r\n  font-family: ${fonts.pixel};\r\n  font-size: 3em;\r\n  text-align: center;\r\n  text-shadow: 0 0 .25em ${colours.white};\r\n  animation: ${pathsAndOpacityDuration} step-end 500ms infinite ${PathsCode};\r\n  @media ${mediaQueries.tablet} {\r\n    line-height: 1.5em;\r\n  }\r\n  &::after, &::before {\r\n    margin-top: 50%;\r\n    content: \"Hello, World !\";\r\n    position: absolute;\r\n    width: 110%;\r\n    z-index: -1;\r\n  }\r\n  &::before {\r\n    font-family: ${ fontGenerator() };\r\n    opacity: 0;\r\n    top: ${ positionGenerator('negative')[0] };\r\n    left: ${ positionGenerator('negative')[1] };\r\n    color: ${ colours.neonBlue };\r\n    animation: ${ pathsAndOpacityDuration} step-end 500ms infinite ${ OpacityCode },\r\n    ${ animationDuration(2, 3) } step-end infinite ${ GlitchPositionBefore },\r\n    ${animationDuration(2, 4) } step-end infinite ${ GlitchFontBefore };\r\n  }\r\n  &::after {\r\n    font-family: ${ fontGenerator() };\r\n    opacity: 0;\r\n    top: ${ positionGenerator('positive')[0] };\r\n    left: ${ positionGenerator('positive')[1] };\r\n    color: ${ colours.neonFuchsia };\r\n    animation: ${ pathsAndOpacityDuration } step-end 500ms infinite ${ OpacityCode },\r\n    ${ GlitchPositionAfter } ${ animationDuration(4, 5) } step-end infinite,\r\n    ${ GlitchFontAfter } ${ animationDuration(3, 5) } step-end infinite;\r\n  }\r\n`\r\nconst Pipe = styled(Link)`\r\n  color: ${colours.neonBlue};\r\n  font-family: ${fonts.pixelHairline};\r\n  background: ${colours.black};\r\n  font-weight: bold;\r\n  margin: .25em 0 .25em 25%;\r\n  font-size: 2em;\r\n  text-decoration: none;\r\n  line-height: 1em;\r\n  &:hover { color: ${colours.neonFuchsia}; }\r\n  @media ${mediaQueries.tablet} { font-size: 1.75em; }\r\n  @media ${mediaQueries.mobileLandscape} { \r\n    font-size: 1.5em; \r\n    margin: .25em 0 .25em 12.5%\r\n  }\r\n`\r\n\r\nfunction Home(): ReactElement  {\r\n  // used to go at the top of the page after loading\r\n  useEffect( () => { window.scroll({top:0}); }, [])\r\n\r\n  return (\r\n    <HomeContainer>\r\n      {/* Background image from Harrison Qi (https://unsplash.com/photos/ce-K_rj1P7U) */}\r\n      <Jumbotron></Jumbotron>\r\n      <Container>\r\n        <MainTitle className='title'>Hello, World&nbsp;!</MainTitle>\r\n        <Pipe to='/projects' title=\"See my projects\">|&gt; My projects</Pipe>\r\n        <Pipe to='/about' title=\"More about me\">|&gt; About me</Pipe>\r\n        <Pipe to='/contact' title=\"Contact me here\">|&gt; Contact me</Pipe>\r\n      </Container>\r\n    </HomeContainer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}