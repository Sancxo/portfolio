{"version":3,"file":"static/js/894.c54efd26.chunk.js","mappings":"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","sources":["Assets/Helpers/generativeGlitchAnimation/keyframes-generator.ts","Assets/Helpers/generativeGlitchAnimation/animation-code-generator.ts","Pages/Home.tsx"],"sourcesContent":["const keyframesGenerator = (prop: string): [number[], number[]] => {\n    let rand: number;\n    const keyframes: number[] = [], keyframesNone: number[] = [];\n\n    // We randomly generate the amount of steps in the keyframes:\n    switch (prop) {\n        case 'path/opac':\n            // random number between 7 and 15\n            rand = Math.round(Math.random() * 8) + 7;\n            break;\n    \n        case 'position':\n        case 'font':\n            // random number between 5 and 15\n            rand = Math.round(Math.random() * 10) + 5;\n            break;\n\n        default:\n            throw new Error(`CSS property \"${prop}\" is not handled by this glitch animation generator library. \n            \\nPlease look at keyframesGenerator function to find another one.`);\n    }\n\n    // We randomly generate the percentage for each step.\n    for (let i = 0; i < rand; i++) {\n        // keyframeNone will deactivate the effect between two keyframes.\n        let keyframe: number, keyframeNone: number;\n\n        do {\n            // number between 0 and 99;\n            keyframe = Math.round(Math.random() * 100);\n    \n            // We generate a number between 2 and 3 + the previous keyframe to be assigned to keyframeNone.\n            let rand2 = keyframe + (Math.round(Math.random()) + 2);\n            keyframeNone = rand2 <= 100 ? rand2 : 100;\n        } while (keyframes.includes(keyframe));\n        \n        keyframes.push(keyframe);\n        keyframesNone.push(keyframeNone);\n    }\n    // We sort the keyframes list to be in ascending order:\n    keyframes.sort((a, b) => { return a - b} );\n    keyframesNone.sort((a, b) => { return a - b} );\n    \n    return [keyframes, keyframesNone];\n}\n\nexport default keyframesGenerator;","// Thanks to Matt Gross for his glitch art animation walkthrough in pure CSS and his clip-path generator:\n// Cyberpunk-style Glitch walkthrough: https://codepen.io/mattgrosswork/pen/VwprebG\n// Randomly generated clip-path : https://codepen.io/mattgrosswork/pen/VwprebG\n\nimport keyframesGenerator from \"./keyframes-generator\";\nimport { blurGenerator, colorGenerator, fontGenerator, opacityGenerator, pathGenerator, positionGenerator } from \"./properties-generators\";\n\nexport const glitchAnimation = (prop: string, sign?: string): any => {\n    let [keyframes, keyframesNone]: [number[], number[]] = keyframesGenerator(prop);\n\n    switch (prop) {\n        case 'path/opac':\n            const pathCode: string[] = [], opacityCode: string[] = [];\n\n            for (let i = 0; i < keyframes.length; i++) {\n                pathCode.push(`${keyframes[i]}% { clip-path: polygon(${pathGenerator()}); }`);\n                opacityCode.push(`${keyframes[i]}% { opacity: ${opacityGenerator()}; }`);\n            }\n            for (let i = 0; i < keyframesNone.length; i++) {\n                pathCode.push(`${keyframesNone[i]}% { clip-path: none; }`);\n                opacityCode.push(`${keyframesNone[i]}% { opacity: 0 }`);\n            }\n\n            // We return a list of stringified lists\n            return [`${pathCode.join('\\n')}`, `${opacityCode.join('\\n')}`];\n        \n        case 'position':\n            const positionCode: string[] = [];\n\n            for (let i = 0; i < keyframes.length; i++) {\n                const [top, left]: string[] = positionGenerator(String(sign));\n                positionCode.push(`${keyframes[i]}% { top: ${top}}; left: ${left}} }`);\n            }\n            // We return a stringified list\n            return `${positionCode.join('\\n')}`;\n\n        case 'font':\n            const fontCode: string[] = [];\n\n            for (let i = 0; i < keyframes.length; i++) {\n                fontCode.push(`${keyframes[i]}% { \n                    font-family: ${fontGenerator()}; \n                    color: ${colorGenerator()}; \n                    filter: blur(${blurGenerator()}em); \n                }`);                \n            }\n            // We return a stringified list\n            return `${fontCode.join('\\n')}`;\n\n        default:\n            throw new Error(`CSS property \"${prop}\" is not handled by this glitch animation generator library. \n            \\nPlease look at glitchAnimation function to find another one.`);\n    }\n}","import { ReactElement, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\n\n// generativeGlitchAnimation library imports\nimport { animationDuration, fontGenerator, positionGenerator } from '../Assets/Helpers/generativeGlitchAnimation/properties-generators';\nimport { glitchAnimation } from '../Assets/Helpers/generativeGlitchAnimation/animation-code-generator';\n\n// style\nimport styled, { keyframes } from 'styled-components';\nimport { colours, fonts, mediaQueries, sizes } from '../Assets/Style/style';\nimport { pageLoadAnimation } from '../Assets/Style/styled-components';\nimport Bckgrd from '../Assets/Imgs/bckgrd_2.jpg';\n\n// Animations\nconst pathsAndOpacityDuration: string = animationDuration(5, 10);\nlet [PathsCode, OpacityCode] = glitchAnimation('path/opac');\nPathsCode = keyframes`${PathsCode}`;\nOpacityCode = keyframes`${OpacityCode}`;\n// We call each functions twice to have different parameters so we get asynchronous animations.\nconst GlitchPositionBefore = keyframes`${glitchAnimation('position', 'negative')}`;\nconst GlitchPositionAfter = keyframes`${glitchAnimation('position', 'positive')}`;\nconst GlitchFontBefore = keyframes`${glitchAnimation('font')}`;\nconst GlitchFontAfter = keyframes`${glitchAnimation('font')}`;\n\n// Styled components\nconst HomeContainer = styled.div` ${pageLoadAnimation} `\nconst Jumbotron = styled.div`\n  background: linear-gradient(#16161675, #161616EE), 50% 50% / cover no-repeat url(${Bckgrd});\n  height: calc(100vh - ${sizes.headerHeight});\n  filter: blur(.25em);\n`\nconst Container = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  display: flex;\n  flex-direction: column;\n`\nconst MainTitle = styled.h1`\n  margin-top: 50%;\n  color: ${colours.white};\n  opacity: 1;\n  font-family: ${fonts.pixel};\n  font-size: 3em;\n  text-align: center;\n  text-shadow: 0 0 .25em ${colours.white};\n  animation: ${pathsAndOpacityDuration} step-end 500ms infinite ${PathsCode};\n  @media ${mediaQueries.tablet} {\n    line-height: 1.5em;\n  }\n  &::after, &::before {\n    margin-top: 50%;\n    content: \"Hello, World !\";\n    position: absolute;\n    width: 110%;\n    z-index: -1;\n  }\n  &::before {\n    font-family: ${fontGenerator()};\n    opacity: 0;\n    top: ${positionGenerator('negative')[0]};\n    left: ${positionGenerator('negative')[1]};\n    color: ${colours.neonBlue};\n    animation: ${pathsAndOpacityDuration} step-end 500ms infinite ${OpacityCode},\n    ${animationDuration(2, 3)} step-end infinite ${GlitchPositionBefore},\n    ${animationDuration(2, 4)} step-end infinite ${GlitchFontBefore};\n  }\n  &::after {\n    font-family: ${fontGenerator()};\n    opacity: 0;\n    top: ${positionGenerator('positive')[0]};\n    left: ${positionGenerator('positive')[1]};\n    color: ${colours.neonFuchsia};\n    animation: ${pathsAndOpacityDuration} step-end 500ms infinite ${OpacityCode},\n    ${GlitchPositionAfter} ${animationDuration(4, 5)} step-end infinite,\n    ${GlitchFontAfter} ${animationDuration(3, 5)} step-end infinite;\n  }\n`\nconst Pipe = styled(Link)`\n  color: ${colours.neonBlue};\n  font-family: ${fonts.pixelHairline};\n  background: ${colours.black};\n  font-weight: bold;\n  margin: .25em 0 .25em 25%;\n  font-size: 2em;\n  text-decoration: none;\n  line-height: 1em;\n  &:hover { color: ${colours.neonFuchsia}; }\n  @media ${mediaQueries.tablet} { font-size: 1.75em; }\n  @media ${mediaQueries.mobileLandscape} { \n    font-size: 1.5em; \n    margin: .25em 0 .25em 12.5%\n  }\n`\nconst ExternalPipe = styled.a`\n  color: ${colours.neonBlue};\n  font-family: ${fonts.pixelHairline};\n  background: ${colours.black};\n  font-weight: bold;\n  margin: .25em 0 .25em 25%;\n  font-size: 2em;\n  text-decoration: none;\n  line-height: 1em;\n  &:hover { color: ${colours.neonFuchsia}; }\n  @media ${mediaQueries.tablet} { font-size: 1.75em; }\n  @media ${mediaQueries.mobileLandscape} { \n    font-size: 1.5em; \n    margin: .25em 0 .25em 12.5%\n  }\n`;\n\nfunction Home(): ReactElement {\n  // used to go at the top of the page after loading\n  useEffect(() => { window.scroll({ top: 0 }); }, [])\n\n  return (\n    <HomeContainer>\n      {/* Background image from Harrison Qi (https://unsplash.com/photos/ce-K_rj1P7U) */}\n      <Jumbotron></Jumbotron>\n      <Container>\n        <MainTitle className='title'>Hello, World&nbsp;!</MainTitle>\n        <ExternalPipe href='https://blog.simontirant.dev' title=\"My tech blog\">|&gt; My blog</ExternalPipe>\n        <Pipe to='/projects' title=\"See my projects\">|&gt; My projects</Pipe>\n        <Pipe to='/about' title=\"More about me\">|&gt; About me</Pipe>\n        <Pipe to='/contact' title=\"Contact me here\">|&gt; Contact me</Pipe>\n      </Container>\n    </HomeContainer>\n  );\n}\n\nexport default Home;\n"],"names":["prop","rand","keyframes","keyframesNone","Math","round","random","Error","i","keyframe","keyframeNone","rand2","includes","push","sort","a","b","glitchAnimation","sign","keyframesGenerator","pathCode","opacityCode","length","pathGenerator","opacityGenerator","join","positionCode","top","left","positionGenerator","String","fontCode","fontGenerator","colorGenerator","blurGenerator","pathsAndOpacityDuration","animationDuration","PathsCode","OpacityCode","GlitchPositionBefore","GlitchPositionAfter","GlitchFontBefore","GlitchFontAfter","HomeContainer","styled","div","pageLoadAnimation","Jumbotron","Bckgrd","sizes","headerHeight","Container","MainTitle","h1","colours","white","fonts","pixel","mediaQueries","tablet","neonBlue","neonFuchsia","Pipe","Link","pixelHairline","black","mobileLandscape","ExternalPipe","useEffect","window","scroll","_jsxs","children","_jsx","className","href","title","to"],"sourceRoot":""}